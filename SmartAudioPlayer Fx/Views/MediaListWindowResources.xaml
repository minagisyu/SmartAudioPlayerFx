<ResourceDictionary
	x:Class="SmartAudioPlayerFx.Views.MediaListWindowResources" x:ClassModifier="internal"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:v="clr-namespace:SmartAudioPlayerFx.Views">

	<!-- image resources -->
	<BitmapImage x:Key="res_image_customize" UriSource="/Resources/カスタマイズ.png" />
	<BitmapImage x:Key="res_image_comment" UriSource="/Resources/コメント.png" />
	<BitmapImage x:Key="res_image_star_on" UriSource="/Resources/スター：オン.png" />
	<BitmapImage x:Key="res_image_star_off" UriSource="/Resources/スター：オフ.png" />
	<BitmapImage x:Key="res_image_treebutton" UriSource="/Resources/ツリーボタン.png" />
	<BitmapImage x:Key="res_image_search_menu" UriSource="/Resources/検索：メニュー.png" />
	<BitmapImage x:Key="res_image_search_delete_unfocused" UriSource="/Resources/検索：削除-デフォルト.png" />
	<BitmapImage x:Key="res_image_search_delete_focused" UriSource="/Resources/検索：削除-フォーカス.png" />

	<!--  listboxitem  -->
	<Style x:Key="listboxItemContainerStyle">
		<Setter Property="ListBoxItem.Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid x:Name="grid" Background="Transparent">
						<Rectangle x:Name="rect" Fill="Transparent" />
						<ContentPresenter />
						<VisualStateManager.VisualStateGroups>
							<!-- Rectangleの色 -->
							<VisualStateGroup Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1" To="InFocus" />
									<VisualTransition GeneratedDuration="0:0:0.3" To="OutFocus" />
								</VisualStateGroup.Transitions>
								<VisualState Name="InFocus">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="rect"
															Storyboard.TargetProperty="Fill.Color"
															To="LightGray" />
									</Storyboard>
								</VisualState>
								<VisualState Name="OutFocus" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="MouseEnter">
								<ei:GoToStateAction StateName="InFocus" />
							</i:EventTrigger>
							<i:EventTrigger EventName="MouseLeave">
								<ei:GoToStateAction StateName="OutFocus" />
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="grid" Property="Background" Value="LightGreen" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<DataTemplate DataType="{x:Type v:MediaListItemViewModel}">
		<Border Background="{Binding WhatsNewBrush}">
			<Border Background="{Binding ErrorBrush}">
				<Border Background="{Binding PlayingBrush}" BorderBrush="Red" BorderThickness="0,0,0,0.15">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Image Grid.Column="0"
							       Width="16"
							       Margin="5,0,0,0"
							       Cursor="Help"
							       Opacity="{Binding CommentOpacity}"
							       Source="{StaticResource res_image_comment}"
							       ToolTip="{Binding Comment}" />
						<Grid Grid.Column="1" Margin="5,0,5,0" VerticalAlignment="Center" Background="Transparent">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ContextMenu>
								<ContextMenu>
									<MenuItem Header="ファイルの保存場所を開く"
												  Command="{Binding OpenExplorerCommand}"
												  CommandParameter="{Binding FilePath}" />
									<MenuItem Header="コピー">
										<MenuItem Header="ファイルパス"
													  Command="{Binding CopyToClipBoardCommand}"
													  CommandParameter="{Binding FilePath}" />
										<MenuItem Header="タイトル名"
													  Command="{Binding CopyToClipBoardCommand}"
													  CommandParameter="{Binding Title}" />
										<MenuItem Header="アーティスト名"
													  Command="{Binding CopyToClipBoardCommand}"
													  CommandParameter="{Binding Artist}" />
										<MenuItem Header="アルバム名"
													  Command="{Binding CopyToClipBoardCommand}"
													  CommandParameter="{Binding Album}" />
									</MenuItem>
									<MenuItem Header="タグ情報を編集"
												  Command="{Binding EditTagInfoCommand}"
												  CommandParameter="{Binding FilePath}" />
									<MenuItem Header="このファイルを無視"
												  Command="{Binding AddToIgnoreCommand}"
												  CommandParameter="{Binding FilePath}" />
								</ContextMenu>
							</Grid.ContextMenu>
							<Grid Grid.Row="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<TextBlock x:Name="MediaItemViewModel_Style_Title"
										   Grid.Column="0" Margin="0,2,0,0"
										   HorizontalAlignment="Left" VerticalAlignment="Bottom"
										   FontSize="13" FontWeight="Bold"
										   Foreground="#FF000040" Text="{Binding Title}"
										   TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
								<CheckBox x:Name="MediaItemViewModel_Style_Favorite"
										  Grid.Column="1" Margin="5,0,0,0"
										  Width="12" MinWidth="12"
										  HorizontalAlignment="Left" Cursor="Hand"
										  Command="{Binding ChangeFavoriteCommand}"
										  CommandParameter="{Binding IsFavorite}"
										  IsChecked="{Binding IsFavorite, Mode=TwoWay}">
									<CheckBox.Template>
										<ControlTemplate TargetType="{x:Type CheckBox}">
											<Image x:Name="image" />
											<ControlTemplate.Triggers>
												<Trigger Property="IsChecked" Value="True">
													<Setter TargetName="image" Property="Source" Value="{StaticResource res_image_star_on}" />
												</Trigger>
												<Trigger Property="IsChecked" Value="False">
													<Setter TargetName="image" Property="Source" Value="{StaticResource res_image_star_off}" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</CheckBox.Template>
								</CheckBox>
							</Grid>
							<Grid Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<TextBlock
									Grid.Column="0" Margin="0,0,15,0"
									HorizontalAlignment="Left" VerticalAlignment="Top"
									FontSize="10" FontWeight="Normal" Foreground="#FF606080"
									Text="{Binding Artist}" TextTrimming="None" TextWrapping="NoWrap" />
								<TextBlock
									Grid.Column="1" Margin="0,0,5,0"
									HorizontalAlignment="Right" VerticalAlignment="Top"
									FontSize="10" FontWeight="Normal" Foreground="#FF606080"
									Text="{Binding MediaList_AlbumName}"
									TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
							</Grid>
						</Grid>
					</Grid>
				</Border>
			</Border>
		</Border>
	</DataTemplate>
	<DataTemplate DataType="{x:Type v:MediaListDirectoryDifinition}">
		<Border Background="Pink">
			<Border BorderBrush="Red" BorderThickness="0,0,0,0.14">
				<Border.ContextMenu>
					<ContextMenu>
						<MenuItem Header="この場所を開く"
								  Command="{Binding OpenExplorerCommand}"
								  CommandParameter="{Binding FilePath}" />
						<MenuItem Header="フォルダパスをコピー"
								  Command="{Binding CopyToClipBoardCommand}"
								  CommandParameter="{Binding FilePath}" />
						<MenuItem Header="このフォルダを無視"
								  Command="{Binding AddToIgnoreCommand}"
								  CommandParameter="{Binding FilePath}" />
					</ContextMenu>
				</Border.ContextMenu>
				<TextBlock Margin="5,0,5,0"
						   HorizontalAlignment="Left" VerticalAlignment="Bottom"
						   FontSize="13" FontWeight="Bold" Foreground="#FF000040"
						   Text="{Binding Title}"
						   TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
			</Border>
		</Border>
	</DataTemplate>

	<!-- full-row selection TreeViewItem  -->
	<v:IsElementWrappingConverter x:Key="IsElementWrappingConverter" />
	<v:LeftMarginMultiplierConverter x:Key="lengthConverter" Length="8" />
	<Style x:Key="treeItemContainerStyle" TargetType="TreeViewItem">
		<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
		<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="1,0,0,0" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Border>
									<Rectangle Margin="0" Opacity="0" Stroke="Black"
											   StrokeDashArray="1 2" StrokeThickness="5" />
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeViewItem">
					<StackPanel>
						<Border Name="Bd"
								Background="{TemplateBinding TreeViewItem.Background}"
								BorderBrush="{TemplateBinding TreeViewItem.BorderBrush}"
								BorderThickness="{TemplateBinding TreeViewItem.BorderThickness}"
								Padding="{TemplateBinding Padding}">
							<Grid Margin="{Binding Depth, Converter={StaticResource lengthConverter}}" HorizontalAlignment="Stretch">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<ToggleButton x:Name="Expander" ClickMode="Press"
											  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
									<ToggleButton.Style>
										<Style TargetType="{x:Type ToggleButton}">
											<Setter Property="Focusable" Value="False" />
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="ToggleButton">
														<Grid Width="15" Height="13" Background="Transparent">
															<Path x:Name="ExpandPath"
																      Margin="1,1,1,1"
																      HorizontalAlignment="Left"
																      VerticalAlignment="Center"
																      Data="M 4 0 L 8 4 L 4 8 Z">
																<Path.Fill>
																	<SolidColorBrush Color="#444" />
																</Path.Fill>
															</Path>
														</Grid>
														<ControlTemplate.Triggers>
															<Trigger Property="IsChecked" Value="True">
																<Setter TargetName="ExpandPath" Property="Data" Value="M 0 4 L 8 4 L 4 8 Z" />
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</ToggleButton.Style>
								</ToggleButton>
								<Grid Grid.Column="1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<ContentPresenter x:Name="PART_Header"
										                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										                  ContentSource="Header" />
									<Button x:Name="treeButton"
											Grid.Column="1"  DataContext="{Binding}"
											HorizontalAlignment="Right"
										    Opacity="0.5"
											Focusable="False"
                                            Visibility="{Binding TreeButtonVisibility}"
											Command="{Binding ChangeViewFocusCommand}"
											CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
										<Button.Template>
											<ControlTemplate>
												<Image Source="{StaticResource res_image_treebutton}" />
											</ControlTemplate>
										</Button.Template>
										<Button.Triggers>
											<EventTrigger RoutedEvent="MouseEnter">
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															Storyboard.TargetProperty="Opacity"
															To="1.0" Duration="0:0:0.0" />
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
											<EventTrigger RoutedEvent="MouseLeave">
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															Storyboard.TargetProperty="Opacity"
															To="0.5" Duration="0:0:0.0" />
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
										</Button.Triggers>
									</Button>

								</Grid>
							</Grid>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false" />
								<Condition Property="Width" Value="Auto" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false" />
								<Condition Property="Height" Value="Auto" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="LightGreen" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="LightGray" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<HierarchicalDataTemplate DataType="{x:Type v:MediaTreeItem_DefaultItemsViewModel}"
		                          ItemContainerStyle="{StaticResource treeItemContainerStyle}"
		                          ItemsSource="{Binding SubItems}">
		<TextBlock Margin="0" HorizontalAlignment="Left" FontSize="12" FontWeight="Normal"
					   Foreground="#FF000040" Text="{Binding Name}" TextTrimming="None" TextWrapping="NoWrap"
			           ToolTip="{Binding Name}"
			           ToolTipService.BetweenShowDelay="0"
			           ToolTipService.HorizontalOffset="-6"
			           ToolTipService.InitialShowDelay="0"
			           ToolTipService.IsEnabled="{Binding Converter={StaticResource IsElementWrappingConverter},
			                                              RelativeSource={RelativeSource Mode=TemplatedParent}}"
			           ToolTipService.Placement="Relative"
			           ToolTipService.ShowDuration="60000"
			           ToolTipService.VerticalOffset="-2"
					   MouseEnter="TreeItem_TextBlock_MouseEnter">
				<TextBlock.ContextMenu>
					<ContextMenu>
						<MenuItem Header="この場所を開く"
								  Command="{Binding OpenExplorerCommand}"
								  CommandParameter="{Binding BasePath}" />
						<MenuItem Header="フォルダパスをコピー"
								  Command="{Binding CopyToClipBoardCommand}"
								  CommandParameter="{Binding BasePath}" />
						<MenuItem Header="このフォルダを無視"
								  Command="{Binding AddToIgnoreCommand}"
								  CommandParameter="{Binding BasePath}" />
					</ContextMenu>
				</TextBlock.ContextMenu>
		</TextBlock>
	</HierarchicalDataTemplate>
	<DataTemplate DataType="{x:Type v:MediaTreeItem_AllItemsViewModel}">
		<TextBlock Margin="0" FontSize="12" FontWeight="Normal" Foreground="#FF000040"
					   Text="{Binding Name}" TextTrimming="None" TextWrapping="NoWrap" />
	</DataTemplate>
	<DataTemplate DataType="{x:Type v:MediaTreeItem_FavoriteItemsViewModel}">
		<TextBlock Margin="0" FontSize="12" FontWeight="Normal" Foreground="#FF000040"
					   Text="{Binding Name}" TextTrimming="None" TextWrapping="NoWrap" />
	</DataTemplate>
	<DataTemplate DataType="{x:Type v:MediaTreeItem_NonPlayedItemsViewModel}">
		<TextBlock Margin="0" FontSize="12" FontWeight="Normal" Foreground="#FF000040"
			           Text="{Binding Name}" TextTrimming="None" TextWrapping="NoWrap" />
	</DataTemplate>
	<DataTemplate DataType="{x:Type v:MediaTreeItem_LatestAddItemsViewModel}">
		<TextBlock Margin="0,0,0,0" FontSize="12" FontWeight="Normal" Foreground="#FF000040"
			           Text="{Binding Name}" TextTrimming="None" TextWrapping="NoWrap" />
	</DataTemplate>

	<!-- Brushes -->
	<LinearGradientBrush x:Key="WindowBackgroundBrush" StartPoint="0.148,1.09" EndPoint="0.587,-0.72">
		<GradientStop Offset="0" Color="#70FEFEFE" />
		<GradientStop Offset="0.043" Color="#70C9C9C9" />
		<GradientStop Offset="0.308" Color="#70FFFFFF" />
		<GradientStop Offset="0.38" Color="#70FBFBFB" />
		<GradientStop Offset="0.894" Color="#70CECECE" />
		<GradientStop Offset="1" Color="#70FFFFFF" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ToolbarBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Offset="0" Color="Transparent" />
		<GradientStop Offset="0.6" Color="#a0ffffff" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ToolbarBackground2OpacityMask" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Offset="0" Color="Black" />
		<GradientStop Offset="0.95" Color="Transparent" />
	</LinearGradientBrush>

</ResourceDictionary>