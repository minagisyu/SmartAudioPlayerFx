<ResourceDictionary
	x:Class="SmartAudioPlayerFx.Views.MediaListWindow_Resources" x:ClassModifier="internal"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:v="clr-namespace:SmartAudioPlayerFx.Views"
	xmlns:vm="clr-namespace:SmartAudioPlayerFx.ViewModels"
	>

	<!-- listboxitem  -->
	<Style x:Key="listboxItemContainerStyle">
		<Setter Property="ListBoxItem.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid x:Name="grid">
						<Rectangle x:Name="rect" Fill="Transparent" />
						<ContentPresenter />
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation Storyboard.TargetName="rect"
											Storyboard.TargetProperty="Fill.Color"
											To="LightGray"
											Duration="00:00:00.100" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation Storyboard.TargetName="rect"
											Storyboard.TargetProperty="Fill.Color"
											To="Transparent"
											Duration="00:00:00.300" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="grid" Property="Background" Value="LightGreen"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate DataType="{x:Type vm:MediaItemViewModel}">
		<Border Background="{Binding WhatsNewBrush}">
			<Border Background="{Binding ErrorBrush}">
				<Border BorderBrush="Red" BorderThickness="0,0,0,0.15" Background="{Binding PlayingBrush}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Image Grid.Column="0" Width="16" Margin="5,0,0,0"
							   Source="/Resources/コメント.png"
							   Cursor="Help"
							   ToolTip="{Binding Comment}"
							   Opacity="{Binding CommentOpacity}" />
						<Grid Grid.Column="1" VerticalAlignment="Center" Margin="5,0,5,0" Background="Transparent">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ContextMenu>
								<ContextMenu>
									<MenuItem
										DataContext="{Binding}"
										Header="ファイルの保存場所を開く"
										Click="MenuItem_ListItem_Open_Click"
										/>
									<MenuItem Header="コピー">
										<MenuItem
											DataContext="{Binding}"
											Header="ファイルパス"
											Click="MenuItem_ListItem_Copy_FilePath_Click"
											/>
										<MenuItem
											DataContext="{Binding}"
											Header="タイトル名"
											Click="MenuItem_ListItem_Copy_Title_Click"
											/>
										<MenuItem
											DataContext="{Binding}"
											Header="アーティスト名"
											Click="MenuItem_ListItem_Copy_Artist_Click"
											/>
										<MenuItem
											DataContext="{Binding}"
											Header="アルバム名"
											Click="MenuItem_ListItem_Copy_Album_Click"
											/>
									</MenuItem>
									<MenuItem
										DataContext="{Binding}"
										Header="タグ情報を編集"
										Click="MenuItem_ListItem_EditTag_Click"
										/>
									<MenuItem
										DataContext="{Binding}"
										Header="このファイルを無視"
										Click="MenuItem_ListItem_IgnoreFile_Click"
										/>
								</ContextMenu>
							</Grid.ContextMenu>
							<Grid Grid.Row="0">
								<!-- MarginはCheckBox.Width+5のサイズを空ける -->
								<TextBlock
									x:Name="MediaItemViewModel_Style_Title"
									DockPanel.Dock="Left" Margin="0,2,17,0"
									Foreground="#FF000040" FontWeight="Bold" FontSize="13"
									HorizontalAlignment="Left" VerticalAlignment="Bottom"
									TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"
									Text="{Binding Title}"
									SizeChanged="MediaItemViewModel_Style_Title_SizeChanged"
									/>
								<!-- MarginはTextBlock.Width+5のサイズを空ける(TextBlock.SizeChangedで調整) -->
								<CheckBox
									x:Name="MediaItemViewModel_Style_Favorite"
									IsChecked="{Binding IsFavorite, Mode=TwoWay}"
									HorizontalAlignment="Left"
									MinWidth="12"
									Width="12"
									Margin="5,0,0,0"
									Cursor="Hand"
									Click="CheckBox_Click">
									<CheckBox.Template>
										<ControlTemplate TargetType="{x:Type CheckBox}">
											<Image x:Name="image" />
											<ControlTemplate.Triggers>
												<Trigger Property="IsChecked" Value="True">
													<Setter TargetName="image" Property="Source" Value="/Resources/スター：オン.png" />
												</Trigger>
												<Trigger Property="IsChecked" Value="False">
													<Setter TargetName="image" Property="Source" Value="/Resources/スター：オフ.png" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</CheckBox.Template>
								</CheckBox>
							</Grid>
							<Grid Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<TextBlock Grid.Column="0" Margin="0,0,15,0"
									   Foreground="#FF606080" FontWeight="Normal" FontSize="10"
									   HorizontalAlignment="Left" VerticalAlignment="Top"
									   TextTrimming="None" TextWrapping="NoWrap"
									   Text="{Binding Artist}"
									   />
								<TextBlock Grid.Column="1" Margin="0,0,5,0"
									   Foreground="#FF606080" FontWeight="Normal" FontSize="10"
									   HorizontalAlignment="Right" VerticalAlignment="Top"
									   TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"
									   Text="{Binding MediaList_AlbumName}" />
							</Grid>
						</Grid>
					</Grid>
				</Border>
			</Border>
		</Border>
	</DataTemplate>
	
	<DataTemplate DataType="{x:Type vm:MediaListDirectoryDifinition}">
		<Border Background="Pink">
			<Border BorderBrush="Red" BorderThickness="0,0,0,0.14">
				<Border.ContextMenu>
					<ContextMenu>
						<MenuItem
							DataContext="{Binding}"
							Header="この場所を開く"
							Click="MenuItem_ListDir_Open_Click"
							/>
						<MenuItem
							DataContext="{Binding}"
							Header="フォルダパスをコピー"
							Click="MenuItem_ListDir_Copy_Click"
							/>
						<MenuItem
							DataContext="{Binding}"
							Header="このフォルダを無視"
							Click="MenuItem_ListDir_IgnoreDir_Click"
							/>
					</ContextMenu>
				</Border.ContextMenu>
				<TextBlock
					Margin="5,0,5,0"
					Foreground="#FF000040" FontWeight="Bold" FontSize="13"
					HorizontalAlignment="Left" VerticalAlignment="Bottom"
					TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"
					Text="{Binding Title}"
					/>
			</Border>
		</Border>
	</DataTemplate>
	
	<!-- full-row selection TreeViewItem -->
	<Style x:Key="treeItemContainerStyle" TargetType="{x:Type TreeViewItem}">
		<Setter Property="IsExpanded" Value="{Binding IsExpanded.Value, Mode=TwoWay}" />
		<Setter Property="IsSelected" Value="{Binding IsSelected.Value, Mode=TwoWay}" />
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Padding" Value="1,0,0,0"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Border>
									<Rectangle
										Margin="0,0,0,0"
										StrokeThickness="5"
										Stroke="Black"
										StrokeDashArray="1 2"
										Opacity="0"/>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<ControlTemplate.Resources>
						<v:LeftMarginMultiplierConverter Length="8" x:Key="lengthConverter" />
						<v:RootNodeVisiblityConverter x:Key="rootNodeVisibilityConverter" />
					</ControlTemplate.Resources>
					<StackPanel>
						<Border
								Name="Bd"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Padding="{TemplateBinding Padding}">
							<Grid Margin="{Binding Depth, Converter={StaticResource lengthConverter}}"
								  HorizontalAlignment="Stretch">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<ToggleButton
										x:Name="Expander"
										IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
										ClickMode="Press">
									<ToggleButton.Style>
										<Style TargetType="{x:Type ToggleButton}">
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="ToggleButton">
														<Grid Width="15" Height="13" Background="Transparent">
															<Path x:Name="ExpandPath"
																  HorizontalAlignment="Left"
																  VerticalAlignment="Center"
																  Margin="1,1,1,1"
																  Data="M 4 0 L 8 4 L 4 8 Z">
																<Path.Fill>
																	<SolidColorBrush Color="#444" />
																</Path.Fill>
															</Path>
														</Grid>
														<ControlTemplate.Triggers>
															<Trigger Property="IsChecked" Value="True">
																<Setter Property="Data"
																		TargetName="ExpandPath"
																		Value="M 0 4 L 8 4 L 4 8 Z"/>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</ToggleButton.Style>
								</ToggleButton>
								<Grid Grid.Column="1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<ContentPresenter
										x:Name="PART_Header"
										ContentSource="Header"
										HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
									<Image
										x:Name="treeButton"
										DataContext="{Binding}"
										Grid.Column="1"
										HorizontalAlignment="Right"
										Source="/Resources/ツリーボタン.png"
										Opacity="0.5"
										MouseEnter="Image_MouseEnter"
										MouseLeave="Image_MouseLeave"
										MouseLeftButtonUp="Image_MouseLeftButtonUp"
										Visibility="Collapsed">
									</Image>
								</Grid>
							</Grid>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false"/>
								<Condition Property="Width" Value="Auto"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false"/>
								<Condition Property="Height" Value="Auto"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Bd"
									Property="Background"
									Value="LightGreen"/>
							<Setter TargetName="treeButton"
									Property="Visibility"
									Value="{Binding Converter={StaticResource rootNodeVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter
									TargetName="Bd"
									Property="Background"
									Value="LightGray"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<HierarchicalDataTemplate DataType="{x:Type vm:ItemsTreeViewModel}"
		ItemsSource="{Binding SubItems}"
		ItemContainerStyle="{StaticResource treeItemContainerStyle}"
		>
		<HierarchicalDataTemplate.Resources>
			<v:IsElementWrappingConverter x:Key="IsElementWrappingConverter" />
		</HierarchicalDataTemplate.Resources>
		<TextBlock
			Margin="0,0,0,0"
			Text="{Binding Name}"
			Foreground="#FF000040"
			HorizontalAlignment="Left"
			TextTrimming="None" TextWrapping="NoWrap"
			FontSize="12" FontWeight="Normal"
			ToolTip="{Binding Name}"
			ToolTipService.Placement="Relative"
			ToolTipService.IsEnabled="{Binding Converter={StaticResource IsElementWrappingConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}"
			ToolTipService.HorizontalOffset="-6"
			ToolTipService.VerticalOffset="-2"
			ToolTipService.InitialShowDelay="0"
			ToolTipService.BetweenShowDelay="0"
			ToolTipService.ShowDuration="60000"
			MouseEnter="TextBlock_MouseEnter"
			>
			<TextBlock.ContextMenu>
				<ContextMenu>
					<MenuItem
						DataContext="{Binding}"
						Header="この場所を開く"
						Click="MenuItem_TreeItem_Open_Click"
						/>
					<MenuItem
						DataContext="{Binding}"
						Header="フォルダパスをコピー"
						Click="MenuItem_TreeItem_Copy_Click"
						/>
					<MenuItem
						DataContext="{Binding}"
						Header="このフォルダを無視"
						Click="MenuItem_TreeItem_IgnoreDir_Click"
						/>
				</ContextMenu>
			</TextBlock.ContextMenu>
		</TextBlock>
	</HierarchicalDataTemplate>

	<DataTemplate DataType="{x:Type vm:FavoriteItemsTreeViewModel}">
		<DataTemplate.Resources>
			<v:IsElementWrappingConverter x:Key="IsElementWrappingConverter" />
		</DataTemplate.Resources>
		<TextBlock
			Margin="0,0,0,0"
			Text="{Binding Name}"
			Foreground="#FF000040"
			TextTrimming="None" TextWrapping="NoWrap"
			FontSize="12" FontWeight="Normal"
			/>
	</DataTemplate>
	<DataTemplate DataType="{x:Type vm:NonPlayedItemsTreeViewModel}">
		<DataTemplate.Resources>
			<v:IsElementWrappingConverter x:Key="IsElementWrappingConverter" />
		</DataTemplate.Resources>
		<TextBlock
			Margin="0,0,0,0"
			Text="{Binding Name}"
			Foreground="#FF000040"
			TextTrimming="None" TextWrapping="NoWrap"
			FontSize="12" FontWeight="Normal"
			/>
	</DataTemplate>
	<DataTemplate DataType="{x:Type vm:LatestAddItemsTreeViewModel}">
		<DataTemplate.Resources>
			<v:IsElementWrappingConverter x:Key="IsElementWrappingConverter" />
		</DataTemplate.Resources>
		<TextBlock
			Margin="0,0,0,0"
			Text="{Binding Name}"
			Foreground="#FF000040"
			TextTrimming="None" TextWrapping="NoWrap"
			FontSize="12" FontWeight="Normal"
			/>
	</DataTemplate>
	
</ResourceDictionary>